package cn.com.javasehigh.c_designmode_garbagecollect;

public class A_DesignModeMain {
    // 1. 你所知道的设计模式有哪些
    /**
     *      Java中一般认为有23种设计模式，我们不需要所有的都会，但是其中常用的几种设计模式应该去掌握。
     *      总体来说设计模式分为三大类：
     *          创建型模式，共五种：工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。
     *          结构型模式，共七种：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。
     *          行为型模式，共十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、
     *                            备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。
     */

    // 2. 单例设计模式
    /**
     *      最好理解的一种设计模式，分为懒汉式和饿汉式。
     */

    // 3. 工厂设计模式
    /**
     *   工厂模式分为工厂方法模式和抽象工厂模式。
     *
     *      工厂方法模式 :工厂方法模式分为三种：
     *          普通工厂模式: 就是建立一个工厂类，对实现了同一接口的一些类进行实例的创建.
     *          多个工厂方法模式: 是对普通工厂方法模式的改进，在普通工厂方法模式中，如果传递的字符串出错，则不能
     *                          正确创建对象，而多个工厂方法模式是提供多个工厂方法，分别创建对象。
     *          静态工厂方法模式: 将上面的多个工厂方法模式里的方法置为静态的，不需要创建实例，直接调用即可。
     *      抽象工厂模式:
     *              工厂方法模式有一个问题就是，类的创建依赖工厂类，也就是说，如果想要拓展程序，必须对工厂类进行修
     *          改，这违背了闭包原则，所以，从设计角度考虑，有一定的问题，如何解决？就用到抽象工厂模式，创建多个工厂
     *          类，这样一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的代码。
     *
     *
     */


}
